type Query {

    # Hero of the Star wars saga
    hero: Character!

    # Find character by its full name
    character(name: String!): Character

    # Find human by its full name
    human(name: String!): Human

    # Find droid by its full name
    droid(name: String!): Droid
}

type Mutation {

    # Create a new droid
    createDroid(name: String!, primaryFunction: String!, friendIds: [ID!]!, appearsIn: [Episode!]!): Droid!
}

interface Node {

    # The id of the node
    id: ID!

    # The timestamp this node was created
    createdAt: Timestamp!
}

# A character in the Star Wars Trilogy
interface Character {

    # The id of the character
    id: ID!

    # The timestamp this character was created
    createdAt: Timestamp!

    # The name of the character
    name: Name!

    # The friends of the character, or an empty list if they have none
    friends: [Character!]!

    # Which movies they appear in
    appearsIn: [Episode!]!

    # The friends of the droid, or an empty list if they have none
    secondDegreeFriends(limit: Int): [Character!]!
}

# One of the films in the Star Wars Trilogy
enum Episode {

    NEW_HOPE,

    EMPIRE,

    JEDI
}

# A humanoid creature in the Star Wars universe
type Human implements Node, Character {

    # The id of the human
    id: ID!

    # The name of the human
    name: Name!

    # The moment this human was created
    createdAt: Timestamp!

    # The friends of the human, or an empty list if they have none
    friends: [Character!]!

    # Which movies they appear in
    appearsIn: [Episode!]!

    # The home planet of the human, or null if unknown
    homePlanet: String

    # The friends of the human's friends
    secondDegreeFriends(limit: Int): [Character!]!

    # Siblings of this human who have the same birthday
    twinSiblings: [Human!]!
}

# A mechanical creature in the Star Wars universe
type Droid implements Node, Character {

    # The id of the droid
    id: ID!

    # The moment this droid was created
    createdAt: Timestamp!

    # The name of the droid
    name: Name!

    # The friends of the droid, or an empty list if they have none
    friends: [Character!]!

    # Which movies they appear in
    appearsIn: [Episode!]!

    # The primary function of the droid
    primaryFunction: String!

    # The friends of the droid's friends
    secondDegreeFriends(limit: Int): [Character!]!
}

type Name {

    given: String!

    surname: String

    full: String!
}

# A single instantaneous point on the time-line. This timestamp counts in seconds from the unix epoch.
# Accurate to the nearest millisecond. Formatted as a json number.
scalar Timestamp
